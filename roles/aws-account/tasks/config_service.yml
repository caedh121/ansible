# Assume an existing role (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)
- sts_assume_role:
    role_arn: "arn:aws:iam::{{this_acc_id}}:role/AWSAdmins-AR"
    role_session_name: "{{account_name}}"
  register: assumed_role

- name: Set Env Vars
  set_fact:
    acc_env:
      AWS_ACCESS_KEY_ID: "{{ assumed_role.sts_creds.access_key }}"
      AWS_SECRET_ACCESS_KEY: "{{ assumed_role.sts_creds.secret_key }}"
      AWS_SESSION_TOKEN: "{{ assumed_role.sts_creds.session_token }}"
      AWS_DEFAULT_REGION: "{{region}}"
      AWS_DEFAULT_OUTPUT: "json"
      aws_access_key_id: "{{ assumed_role.sts_creds.access_key }}"
      aws_secret_access_key: "{{ assumed_role.sts_creds.secret_key }}"
      security_token: "{{ assumed_role.sts_creds.session_token }}"
      region: "{{region}}"
      output: "json"

- name: Create Service Role
  shell: > 
    aws iam create-service-linked-role --aws-service-name config.amazonaws.com | grep -q Principal && echo 'CREATING' || echo 'CREATED'
  environment: "{{acc_env}}"
  register: this_rc
  changed_when: this_rc.stdout == 'CREATING'

- name: This ACCOUNT ID IS
  debug:
    msg: "{{this_acc_id}}"

- name: You have 2 minutes to go to S3 console in Monitoring account  and add THIS ACCOUNT ID to the bucket organizational-multiregion-config
  pause: seconds=120

- name: Config step 1 of 3 Create Recorder
  shell: >
    aws configservice put-configuration-recorder --configuration-recorder name=default,roleARN="arn:aws:iam::{{this_acc_id}}:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig" --recording-group allSupported=true,includeGlobalResourceTypes=true
  environment: "{{acc_env}}"
  register: this_sc

- debug:
    msg: "{{this_sc}}"

- name: Config step 2 of 3 Put Delivery Channel S3
  shell: >
    aws configservice put-delivery-channel --delivery-channel file:///etc/ansible/roles/aws-account/files/deliveryChannel.json
  environment: "{{acc_env}}"

- name: Config step 3 of 3 Start Config Service
  shell: >
    aws configservice start-configuration-recorder --configuration-recorder-name configRecorderName default --region "{{region}}" | grep -q '[]' && echo 'STARTING' || echo 'STARTED'
  environment: "{{acc_env}}"
  register: this_srv
  changed_when: this_srv.stdout != 'STARTED'


- name: Config checking status
  shell: >
    aws configservice describe-configuration-recorder-status | grep -q SUCCESS && echo 'RECORDING' || echo 'PENDING MANUAL START OF RECORDING IN THE CONSOLE'
  environment: "{{acc_env}}"
  register: this_status
  changed_when: this_status.stdout == 'RECORDING'

- debug:
    msg: "{{this_status.stdout}}"
