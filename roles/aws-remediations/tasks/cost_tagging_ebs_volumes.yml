- name: Get list of  instances with attached  volumes
  ec2_instance_info:
    region: "{{region}}"
  register: ec2_list

- name: Tag the volumes 0
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[0].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 1
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[1].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 2
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[2].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 3
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[3].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 4
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[4].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 5
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[5].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

- name: Tag the volumes 6 
  ec2_tag:
    region: "{{region}}"
    purge_tags: no
    resource: "{{ item | json_query ('block_device_mappings[6].ebs.volume_id') }}"
    state: present
    tags:
      Name: "{{ item.tags.Name  }}"
      Customer: "{{ item.tags.Customer }}"
      Environment: "{{ item.tags.Environment }}"
      Taggedby: Ansible
  with_items: "{{ ec2_list | json_query ('instances[*]') | default([]) }}"
  ignore_errors: yes

